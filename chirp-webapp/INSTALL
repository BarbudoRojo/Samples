Follow the instructions for wxsutils and redis-wxs. The redis-wxs creates the database for this example. The redis database
schema is constant so that schema works for the chirp storage.

Once everything is compiled and built, i.e. do a mvn install for wxsutils and then do it for redis-wxs. Next, build chirp-webapp.

Start a test redis server using this script in the chirp-webapp folder:

./runtestserver.sh

You only need a test server if the wxsutils.properties in the chirp-war specifies a cep property, the catalog endpoint
for the test server. Otherwise, the default actually, is to start such a test server within the servlet engine itself.

Make sure your mysql database is running and that you have created the chirp database (see instructions in redis-wxs).

The objectgrid-server and og-spring jars are marked in the pom.xml as PROVIDED. This means they are not included in the
WAR as is. The classpath for jetty or your application server should have them already on the class path. If you are
using WebSphere ND then install WXS on top to achieve this. Otherwise, remove the scope from those jars in the pom.xml

mvn jetty:run

Now, open a browser and goto http://localhost:8080/chirp-webapp

Register and then chirp/tweet away. Others can login also and it works very much like twitter.